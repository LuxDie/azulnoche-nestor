/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package introjuego;

import dato.ComandoDato;
import dato.HistoriaDato;
import dato.MensajeDato;
import dato.TextoComandoDato;
import dato.TextoMensajeDato;
import entidad.Comando;
import entidad.Historia;
import entidad.Mensaje;
import entidad.Tarea;
import entidad.TextoComando;
import entidad.TextoMensaje;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.PrintStream;
import java.util.ArrayList;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import logicajuego.HistoriaLogica;
import logicajuego.MensajeLogica;
//import narracion.Historia;
//import narracion.Mensaje;
//import narracion.Tarea;
import utils.ManipulacionDeTextos;
import org.xml.sax.Attributes;

/**
 *
 * @author Nacho
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        setSize(815, 600);
        setLocationRelativeTo(null);
        jTextArea1.setOpaque(false);
        //jTextArea1.setEditable(false);
        
        ///
        
        ///
        historia = new HistoriaLogica();
        //--------------------------------
        //historia.cargarHistoriaPorDefecto();
        
        //Si ya se grabo la historia por defecto en la base de dato...
        cargarHistoriaPorDefectoDesdeBaseDato();
        //---------------------------------
        mostrarProximoMensaje();
        /*
        Mensaje mensaje = historia.getMensaje();
        String textoMensaje = mensaje.getMensaje();



        if (mensaje.getMostrarMensaje()) {
            jTextArea1.append(textoMensaje + "\n");//SE DEBE DEFINIR SI ES NECESARIO VOLVER A ACTIVAR  
        }
        */
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jTextField1.setText("Escriba aqu√≠");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(50, 480, 220, 30);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(40, 60, 330, 360);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Inventario");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(510, 34, 160, 40);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/introjuego/correccion2.png"))); // NOI18N
        jLabel4.setText("Inventario");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(500, 30, 170, 60);

        jButton1.setText("Enviar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(280, 480, 80, 30);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/introjuego/correcion.png"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(430, 30, 65, 30);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/introjuego/correccion2.png"))); // NOI18N
        jLabel8.setText("Inventario");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(40, 430, 170, 140);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/introjuego/inventario.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(440, 30, 306, 497);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/introjuego/correccion2.png"))); // NOI18N
        jLabel7.setText("Inventario");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(200, 470, 180, 60);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/introjuego/resize.jpg"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 840, 564);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/introjuego/correccion2.png"))); // NOI18N
        jLabel6.setText("Inventario");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(500, 30, 170, 60);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        JOptionPane.showMessageDialog(rootPane, evt);
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        //procesarComando(jTextField1.getText());
        //insertarHistoria();//ok
        //insertarMensaje();//ok
        //cargarHistoriasTodas();//ok
        //cargarMensajesDeIdHistoriaIdIdioma();//ok
        //insertarTextoMensaje();// ok
        //cargarTextoMensajePorIdMensajeIdIdioma();
        //cargarComandosDeIdMensaje();//ok
        //insertarTextoComando();
        //cargarTextoComadoPorIdComandoIdIdioma();
        //insertarHIstoriaCompletaEnBaseDato();
        leerScriptHistoria();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jTextArea1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            mostrarProximoMensaje();
        }
    }//GEN-LAST:event_jTextArea1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
                
            }
        });
    }

    private HistoriaLogica historia;
    private MensajeLogica ultimoMensajeMostrado;
    
    private void mostrarProximoMensaje() {
        ultimoMensajeMostrado = historia.getMensaje();
        if (ultimoMensajeMostrado != null) {
            String textoMensaje = ManipulacionDeTextos.formatearTexto(ultimoMensajeMostrado.getMensaje(), 40);

            if (ultimoMensajeMostrado.getMostrarMensaje()) {
                jTextArea1.append(textoMensaje + "\n");//SE DEBE DEFINIR SI ES NECESARIO VOLVER A ACTIVAR  
            }

            if (!ultimoMensajeMostrado.getProcesarRespuesta()) {
                jTextArea1.append("presione ENTER para continuar" + "\n");
            }
        }
        
        
    }
    
    private void procesarComando(String textoComando) {
        if (textoComando.equals("tarea pendiente")) {
            Tarea tarea = historia.obtenerPrimerTareaPendiente();
            if (tarea.getTareaValida()) {
                //System.out.println("TAREA PENDIENTE");
                jTextArea1.append("TAREA PENDIENTE" + "\n");
                
                jTextArea1.append(tarea.getDetalleTarea() + "\n");
            } else {
                jTextArea1.append("No hay tarea pendiente" + "\n");
            }
        } else {
            if (ultimoMensajeMostrado.getProcesarRespuesta()) {
                if (historia.procesarTextoComando(textoComando)) {
                    //System.out.println("comando no valido...");
                    //break;
                    mostrarProximoMensaje();
                } else {
                    jTextArea1.append("comando no valido" + "\n");
                }
            }
        }
    }
    
    private void insertarHistoria() {
        HistoriaDato historiaDato = new HistoriaDato();
        Historia historia = new Historia();
        historia.setTitulo("historia 1");
        historia.setIdIdioma(1);
        historia.setDescripcion("descripcion 1");
        historia.setCodigoMensajeInicio("mensaje1");
        historiaDato.insertarHistoria(historia);
    }
    
    private void cargarHistoriasTodas() {
        HistoriaDato historiaDato = new HistoriaDato();
        ArrayList<Historia> listaHistorias = historiaDato.obtenerListHistoriasTodo();
        Historia historia = listaHistorias.get(1);
        System.out.println(historia.getDescripcion());
    }
    
    private void insertarMensaje() {
        MensajeDato mensajeDato = new MensajeDato();
        Mensaje mensaje = new Mensaje();
        mensaje.setIdHistoria(1);
        mensaje.setCodigoMensaje("mensaje1");
        //mensaje.setCodigoMensajeSiguiente("null");
        mensaje.setMensajePopUp(false);
        mensaje.setMostrarMensaje(true);
        mensaje.setObligatorio(false);
        mensajeDato.insertarMensaje(mensaje);
    }
    
    private void cargarMensajesDeIdHistoriaIdIdioma() {
        MensajeDato mensajeDato = new MensajeDato();
        ArrayList<Mensaje> listaMensajes = mensajeDato.obtenerListaMensajesPorIdHistoria(1);
        Mensaje mensaje = listaMensajes.get(0);
        System.out.println(mensaje.getCodigoMensaje());
    }
    
    private void insertarTextoMensaje() {
        TextoMensajeDato textoMensajeDato = new TextoMensajeDato();
        TextoMensaje textoMensaje = new TextoMensaje();
        textoMensaje.setIdMensaje(1);
        textoMensaje.setIdIdioma(1);
        textoMensaje.setTextoMensaje("mensaje 1...");
        textoMensajeDato.insertarTextoMensaje(textoMensaje);
    }
    
    private void cargarTextoMensajePorIdMensajeIdIdioma() {
        TextoMensajeDato textoMensajeDato = new TextoMensajeDato();
        ArrayList<TextoMensaje> listaTextoMensaje = textoMensajeDato.obtenerListaTextoMensajePorIdMensajeIdIdioma(1, 1);
        TextoMensaje textoMensaje = listaTextoMensaje.get(0);
        System.out.println(textoMensaje.getTextoMensaje());
    }
    
    private void insertarComando() {
        ComandoDato comandoDato = new ComandoDato();
        Comando comando = new Comando();
        comando.setIdMensaje(1);
        comando.setCodigoComando("comando1");
        comando.setCodigoMensajeSiguiente("mensaje1");
        comandoDato.insertarComando(comando);
    }
    
    private void cargarComandosDeIdMensaje() {
        ComandoDato comandoDato = new ComandoDato();
        ArrayList<Comando> listaComandos = comandoDato.obtenerListaComandosDeIdMensaje(1);
        Comando comando = listaComandos.get(0);
        System.out.println(comando.getCodigoComando());
    }
    
    private void insertarTextoComando() {
        TextoComandoDato textoComandoDato = new TextoComandoDato();
        TextoComando textoComando = new TextoComando();
        textoComando.setIdComando(1);
        textoComando.setIdIdioma(1);
        textoComando.setTextoComando("DOBLAR IZQUIERDA");
        textoComandoDato.insertarTextoComando(textoComando);
    }
    
    private void cargarTextoComadoPorIdComandoIdIdioma() {
        TextoComandoDato textoComandoDato = new TextoComandoDato();
        ArrayList<TextoComando> listaTextoComando = textoComandoDato.obtenerListaTextoComando(1, 1);
        TextoComando textoComando = listaTextoComando.get(0);
        System.out.println(textoComando.getTextoComando());
    }
    
    private void insertarHIstoriaCompletaEnBaseDato() {
        historia.insertarHistoriaCompleta();
    }
    
    private void cargarHistoriaPorDefectoDesdeBaseDato() {
        historia.obtenerHistoriaCompletaPorId(1, 1, "intro_manejasAuto");
    }
    
    private void leerScriptHistoria() {
        historia.cargarHistoriaDesceScript("historia1.txt");
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
